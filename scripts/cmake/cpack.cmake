# General
set(VERSION "1.0.0")
set(CPACK_GENERATOR "DEB;TGZ") # Support both DEB and TGZ
set(CPACK_MONOLITHIC_INSTALL TRUE)
set(CPACK_SET_DESTDIR TRUE)
set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY FALSE)
set(CPACK_PACKAGE_VERSION ${VERSION})
set(CPACK_PACKAGE_NAME "${PROJECT_NAME}")
set(CPACK_PACKAGE_RELEASE 1)
set(CPACK_PACKAGE_CONTACT "email@example.com")
set(CPACK_PACKAGE_VENDOR "Asanim")
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}_${CMAKE_SYSTEM_PROCESSOR}")
set(CPACK_PACKAGE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
set(CMAKE_INSTALL_PREFIX "/")
set(CPACK_STRIP_FILES TRUE) # Strip our binaries of debug symbols


if(CPACK_GENERATOR STREQUAL "TGZ")
    # TGZ options
    message(STATUS "Using TGZ packaging")
    set(CPACK_SOURCE_GENERATOR "TGZ")
    set(CPACK_SOURCE_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-src")
    set(CPACK_SOURCE_IGNORE_FILES "/build/;/\\\\.git/;\\\\.swp$;\\\\.#;/#")
    set(CPACK_SOURCE_TOPLEVEL_TAG "source")
    set(CPACK_SOURCE_OUTPUT_CONFIG_FILE "${CMAKE_CURRENT_BINARY_DIR}/CPackSourceConfig.cmake")
else()
    # Debian
    message(STATUS "Using DEB packaging")
    set(CPACK_DEBIAN_PACKAGE_MAINTAINER "email@example.com")
    set(CPACK_DEBIAN_PACKAGE_NAME "${CPACK_PACKAGE_NAME}")
    set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "${CMAKE_SYSTEM_PROCESSOR}")
    set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
    set(CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/README.md")
    set(CPACK_DEBIAN_PACKAGE_DEPENDS "")
    set(CPACK_DEBIAN_PACKAGE_DESCRIPTION "Default package description for ${CPACK_PACKAGE_NAME}")
    set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "https://example.com/${CPACK_PACKAGE_NAME}")

    # Package name for deb
    set(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)
endif()

# Grouping and components
set(CPACK_COMPONENTS_GROUPING ALL_COMPONENTS_IN_ONE)
set(CPACK_DEB_COMPONENT_INSTALL YES)

include(CPack)

# CPack RPM spec file
configure_file("${CMAKE_CURRENT_SOURCE_DIR}/scripts/cmake/project.spec.in" "${CMAKE_CURRENT_BINARY_DIR}/project.spec" @ONLY IMMEDIATE)
set(CPACK_RPM_USER_BINARY_SPECFILE "${CMAKE_CURRENT_BINARY_DIR}/project.spec")
